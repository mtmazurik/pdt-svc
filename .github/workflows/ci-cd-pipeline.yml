# Copyright 2020 Cloud Computing Associates LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
on:
  push:
    branches: [ main ]

name: CI/CD Pipeline for pdt-svc # REST API svc; builds a Docker image -> DockerHub, deploys to GCP Cloud Run (host) service with App secrets-> env vars for code use
env:
  APP_PATH: './pdt.svc'
  SERVICE: 'pdt-svc'
  REGION: 'us-west1'
  PROJECT: 'cloud-run-project-01'
  DOCKERHUB_IMAGE: 'mtmazurik/pdt-svc:latest'
  ARTIFACT_REGISTRY: 'us-west1-docker-pkg.dev'
  ARTIFACT_REGISTRY_IMAGE: 'us-west1-docker-pkg.dev/cloud-run-project-01/pdt-svc/pdt-svc:latest'
jobs:
  build:                        # pushes the docker image to DockerHub with "tags" value below, overwriting the previous  :latest   version
    runs-on: ubuntu-latest
    environment: production     # placeholder; not using specific environs yet with our variables
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2                       # first push into DockerHub
        with:
          file: ${{ env.APP_PATH }}/Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_IMAGE }}

  push:
    needs: build                                                # depends on: build step
    runs-on: ubuntu-latest
    steps:
    - name: Auth
      uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.GCP_CREDENTIALS_JSON }}
        project_id: ${{ env.PROJECT }}
        export_default_credentials: true

    - name: Configure GCP Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY}} --quiet

    - name: Pull&Push to Artifact registry
      run: |-
        docker pull ${{ env.DOCKERHUB_IMAGE }}
        docker tag ${{ env.DOCKERHUB_IMAGE }} ${{ env.ARTIFACT_REGISTRY_IMAGE }}
        docker push ${{ env.ARTIFACT_REGISTRY_IMAGE }}
        
  deploy:
    needs: push                                                 # depends on:   push step 
    runs-on: ubuntu-latest
    steps:
    - name: Auth
      uses: google-github-actions/auth@v0               
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}   

    - name: Deploy image to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: ${{ env.SERVICE }}
        image: ${{ env.ARTIFACT_REGISTRY_IMAGE }}
        env_vars: SearchEngine__GoogleCustomSearchCx=${{ secrets.APP_GOOGLE_SEARCH_CX }}, \
                  SearchEngine__GoogleCustomSearchApiKey=${{ secrets.APP_GOOGLE_SEARCH_API_KEY }}